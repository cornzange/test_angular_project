{"version":3,"file":"main.d1ccfc53c8c93598.js","mappings":"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","names":["AppComponent","constructor","selectors","i0","ToDoService","http","this","getAllToDo","get","url","core","factory","ItemComponent","ToDoComponent","service","ngOnInit","getTodos","observable$","PostsService","getAllPosts","PostsComponent","getPosts","AlbumsService","getAllAlbums","AlbumsComponent","getAlbums","routes","path","component","redirectTo","pathMatch","AppRoutingModule","RouterModule","ItemModule","bootstrap","BrowserModule","FormsModule","ToDoModule","HttpClientModule","PostsModule","AlbumsModule","AppModule","__NgCli_bootstrap_1","bootstrapModule"],"sourceRoot":"webpack:///","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/todo/todo.service.ts","./src/app/pages/todo/item/item.component.ts","./src/app/pages/todo/todo.component.html","./src/app/pages/todo/item/item.component.html","./src/app/pages/todo/todo.component.ts","./src/app/pages/posts/posts.service.ts","./src/app/pages/posts/item/item.component.ts","./src/app/pages/posts/posts.component.html","./src/app/pages/posts/item/item.component.html","./src/app/pages/posts/posts.component.ts","./src/app/pages/albums/albums.service.ts","./src/app/pages/albums/item/item.component.ts","./src/app/pages/albums/albums.component.html","./src/app/pages/albums/item/item.component.html","./src/app/pages/albums/albums.component.ts","./src/app/app-routing.module.ts","./src/app/pages/todo/item/item.module.ts","./src/app/pages/todo/todo.module.ts","./src/app/pages/posts/item/item.module.ts","./src/app/pages/posts/posts.module.ts","./src/app/pages/albums/item/item.module.ts","./src/app/pages/albums/albums.module.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n    selector: 'my-app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.styles.css']\n})\nexport class AppComponent {\n    title: string = \"Test project\";\n}\n","<h1>{{title}}</h1>\n<nav>\n    <a routerLink=\"/todo\">To do list</a>\n    <a routerLink=\"/posts\">Posts</a>\n    <a routerLink=\"/albums\">Albums</a>\n</nav>\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToDoService {\n\n  constructor(private http: HttpClient) { }\n\n  private url = \"https://jsonplaceholder.typicode.com/todos\"\n\n  getAllToDo(): Observable<any> {\n    return this.http.get<any>(this.url)\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'item-component',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.styles.css']\n})\nexport class ItemComponent {\n    @Input() todoIndex: number;\n    @Input() title: string = \"\";\n    @Input() completed: boolean = false;\n}\n","<div class=\"page-header\">\n    <h1>Todo</h1>\n</div>\n<div class=\"panel\" *ngIf=\"(observable$ | async) as items\">\n    <div class=\"container\">\n        <item-component *ngFor=\"let item of items; let i = index\" [todoIndex]=\"i\" [title]=\"item.title\"\n            [completed]=\"item.completed\">\n        </item-component>\n    </div>\n</div>","<div class=\"todo-item\">\n    <p>{{todoIndex + 1}}. {{title}}</p>\n    <input type=\"checkbox\" [(ngModel)]=\"completed\" />\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\nimport { ToDoService } from './todo.service';\n\n\n@Component({\n    selector: 'todo',\n    templateUrl: './todo.component.html',\n    styleUrls: ['../../common/panel.styles.css']\n})\nexport class ToDoComponent {\n    constructor(private service: ToDoService) { }\n\n    observable$: Observable<any>;\n\n\n    ngOnInit(): void {\n        this.getTodos();\n    }\n\n    getTodos(): void {\n        this.observable$ = this.service.getAllToDo()\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  constructor(private http: HttpClient) { }\n\n  private url = \"https://jsonplaceholder.typicode.com/posts\"\n\n  getAllPosts(): Observable<any> {\n    return this.http.get<any>(this.url)\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'posts-item-component',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.styles.css']\n})\nexport class ItemComponent {\n    @Input() title: string = \"\";\n    @Input() body: string = \"\";\n}\n","<div class=\"page-header\">\n    <h1>Posts</h1>\n</div>\n<div class=\"panel\" *ngIf=\"(observable$ | async) as items\">\n    <div class=\"container\">\n        <posts-item-component *ngFor=\"let item of items\" [title]=\"item.title\" [body]=\"item.body\">\n        </posts-item-component>\n    </div>\n</div>","<div class=\"posts-item\">\n    <h3 class=\"post-title\">{{title}}</h3>\n    <p class=\"post-title\">{{body}}</p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\nimport { PostsService } from './posts.service';\n\n\n@Component({\n    selector: 'posts',\n    templateUrl: './posts.component.html',\n    styleUrls: ['../../common/panel.styles.css']\n})\nexport class PostsComponent {\n    constructor(private service: PostsService) { }\n\n    observable$: Observable<any>;\n\n\n    ngOnInit(): void {\n        this.getPosts();\n    }\n\n    getPosts(): void {\n        this.observable$ = this.service.getAllPosts()\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AlbumsService {\n\n    constructor(private http: HttpClient) { }\n\n    private url = \"https://jsonplaceholder.typicode.com/albums\"\n\n    getAllAlbums(): Observable<any> {\n        return this.http.get<any>(this.url)\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'albums-item-component',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.styles.css']\n})\nexport class ItemComponent {\n    @Input() title: string = \"\";\n}\n","<div class=\"page-header\">\n    <h1>Albums</h1>\n</div>\n<div class=\"panel\" *ngIf=\"(observable$ | async) as items\">\n    <div class=\"container\">\n        <albums-item-component *ngFor=\"let item of items\" [title]=\"item.title\" [completed]=\"item.completed\">\n        </albums-item-component>\n    </div>\n</div>","<div class=\"albums-item\">\n    <p>{{title}}</p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\nimport { AlbumsService } from './albums.service';\n\n\n@Component({\n    selector: 'albums',\n    templateUrl: './albums.component.html',\n    styleUrls: ['../../common/panel.styles.css']\n})\nexport class AlbumsComponent {\n    constructor(private service: AlbumsService) { }\n\n    observable$: Observable<any>;\n\n\n    ngOnInit(): void {\n        this.getAlbums();\n    }\n\n    getAlbums(): void {\n        this.observable$ = this.service.getAllAlbums()\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ToDoComponent } from './pages/todo/todo.component';\nimport { PostsComponent } from './pages/posts/posts.component';\nimport { AlbumsComponent } from './pages/albums/albums.component';\n\nconst routes: Routes = [\n  { path: 'todo', component: ToDoComponent },\n  { path: '', redirectTo: '/todo', pathMatch: 'full' },\n  { path: 'albums', component: AlbumsComponent },\n  { path: 'posts', component: PostsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { ItemComponent } from './item.component';\n@NgModule({\n    imports: [BrowserModule, FormsModule],\n    declarations: [ItemComponent],\n    exports: [ItemComponent],\n    bootstrap: [ItemComponent]\n})\nexport class ItemModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { ToDoComponent } from './todo.component';\nimport { ItemModule } from './item/item.module'\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n    imports: [BrowserModule, FormsModule, ItemModule, HttpClientModule],\n    declarations: [ToDoComponent],\n})\nexport class ToDoModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { ItemComponent } from './item.component';\n@NgModule({\n    imports: [BrowserModule, FormsModule],\n    declarations: [ItemComponent],\n    exports: [ItemComponent],\n    bootstrap: [ItemComponent]\n})\nexport class ItemModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { PostsComponent } from './posts.component';\nimport { ItemModule } from './item/item.module'\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n    imports: [BrowserModule, FormsModule, ItemModule, HttpClientModule],\n    declarations: [PostsComponent],\n})\nexport class PostsModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { ItemComponent } from './item.component';\n@NgModule({\n    imports: [BrowserModule, FormsModule],\n    declarations: [ItemComponent],\n    exports: [ItemComponent],\n    bootstrap: [ItemComponent]\n})\nexport class ItemModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AlbumsComponent } from './albums.component';\nimport { ItemModule } from './item/item.module'\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n    imports: [BrowserModule, FormsModule, ItemModule, HttpClientModule],\n    declarations: [AlbumsComponent],\n})\nexport class AlbumsModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ToDoModule } from './pages/todo/todo.module';\nimport { PostsModule } from './pages/posts/posts.module';\nimport { AlbumsModule } from './pages/albums/albums.module'\n@NgModule({\n    imports: [ToDoModule, PostsModule, AlbumsModule, BrowserModule, FormsModule, HttpClientModule, AppRoutingModule],\n    declarations: [AppComponent],\n    bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nconst platform = platformBrowserDynamic();\nplatform.bootstrapModule(AppModule);\n"],"x_google_ignoreList":[]}